<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nikson69</title>
    <description>Jekyll-Uno - a minimal, responsive theme for Jekyll</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 07 Mar 2018 20:25:18 +0300</pubDate>
    <lastBuildDate>Wed, 07 Mar 2018 20:25:18 +0300</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Unix в Windows 10</title>
        <description>&lt;p&gt;Наконец в Windows появился полноценный bash. 
&lt;img src=&quot;/images/picture/Bash-On-Unix.png&quot; /&gt;
Так получилось, что командная строка windows для меня довольно неудобна, а cygwin постоянно ломался (скорей всего по моей вине), поэтому сначала была виртуальная машина, а после linux был установлен второй системой. Когда промелькнула информация о выходе bash прям в windows, отнёсся к этому скептически, но после выхода сразу установил и был удивлен, все привычные команды, в привычной с детства windows.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Bash работает только в windows 10, поэтому расскажу как обновиться до 10 и установить bash on Ubuntu прям в windows 10, поехали.&lt;/p&gt;

&lt;p&gt;Если у вас установлена windows 7,8,8.1, то для начала нужно обновиться до windows 10 с помощью утилиты Media creation tools, бывает зависание программы на поиске обновления, чтобы это избежать нужно зайти в панель управления, сделать мелкие или крупные значки, зайти в Администрирование, службы и остановить службу Центр обновления Windows. Программа сама скачает и обновит windows до 10. После обновления нужно обновить 10 до последней ревизии в Windows 10 update.&lt;/p&gt;

&lt;p&gt;После всех действий лучше всего очистить жесткий диск от ненужного хлама. Для этого в этом компьютере(мой компьютер) выбираем раздел с Windows и жмем на него пкм (правой кнопкой мыши) - свойство - очистка диска - очистить системные файлы. Ставим галочки везде и жмем ОК. Отлично, у нас чисто установленная Windows 10.&lt;/p&gt;

&lt;p&gt;Так, теперь установим bash, для этого нам надо зайти в пуск - параметры - обновления - для разработчиков и выберем режим разработчика. После надо зайти в параметрах в раздел персонализации - темы - параметры значков рабочего стола и там поставить галочку в панели управления. В панели управления надо зайти в удаление программы - включение или отключение компонентов windows и там надо поставить галочку в “подсистема в windows для linux (beta-версия)”. Перезагружаем пк и возможно скоро или уже (все зависит от того, когда читаешь эту статью) bash linux будет доступен в официальном магазине Windows. Так вот теперь в поиске надо ввести bash и открыть его, вам будет предложено установить Bash on Ubuntu on Windows. Для автоматизации надо ввести команду&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Lxrun / install / y &quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Скорее всего, вас попросят во время установки ввести пароль для root пользователя, запомните его. Отлично, теперь у нас есть bash прямо в windows, найти его можно в поиске введя bash или ubuntu. Как доп примочку можно добавить шрифты ubuntu, для этого нужно скачать шрифты UbuntuMono-R.ttf  (http://font.ubuntu.com/), устанавливаются двойным кликом. А что бы их использовать, надо в реестре, по вот этому пути&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Console\TrueTypeFont
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;добавить стоковый параметр (reg_sz) 000 со значением Ubuntu Mono. Теперь в свойствах  Bash on Ubuntu on Windows можно установить нужные шрифты.&lt;/p&gt;

&lt;p&gt;Поздравляю, в твоем windows установлен bash, команды доступны от ubuntu. Можно поиграть, попробовать поработать в командной строке, кстати что-бы перекинуть файлы в линукс, то лучше напрямую из баша перекидывать файлы, например с диска d, если перекидывать файлы через проводник, то он их почему-то не видит.&lt;/p&gt;

&lt;p&gt;А как же удалить или переустановить это? Да легко. После удаления нужно повторить те же действия, которые написаны выше только перед тем как убрать галочку с “подсистема в windows для linux (beta-версия)”, надо в cmd ввести&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxrun /uninstall /full
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;А только потом убрать галочку с  “подсистема в windows для linux (beta-версия)” и перезагрузить компьютер.&lt;/p&gt;

&lt;p&gt;Я очень рад, что добавили bash в windows, так как с гидхабом работаю через него, да и с блогом тоже удобнее работать. Спасибо ребятам из Ubuntu и microsoft за проделанную работу, а вам за прочтение!&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Jul 2017 02:00:00 +0300</pubDate>
        <link>http://localhost:4000/2017/Unix-on-windows/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/Unix-on-windows/</guid>
        
        <category>Windows_10</category>
        
        <category>unix</category>
        
        
        <category>OS</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Jan 2016 18:04:23 +0300</pubDate>
        <link>http://localhost:4000/2016/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/welcome-to-jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Elementary OS Freya begin</title>
        <description>&lt;p&gt;Начни знакомство с линуксом на прекрасном и самом красивом, по моему мнению, дистрибутивe.
&lt;img src=&quot;/images/picture/Elementary-OS-Freya.jpg&quot; /&gt;
Elementary основана на Ubuntu, что гораздо облегчает новому пользователю работу. Она приятно выглядит и напоминает интерфейсом продукцию от Apple. Дистрибутив легковесный и подойдет для слабого железа.&lt;/p&gt;

&lt;p&gt;Сразу скажу, что скачать можно &amp;lt;a href=//elementary.io/ru/  taget=_blank&amp;gt;тут&amp;lt;/a&amp;gt;. Если возникают проблемы есть хорошее &amp;lt;a href=//elementary.today taget=_blank&amp;gt;Русскоговорящие сообщество&amp;lt;/a&amp;gt;, так же много решений подходит от Ubuntu. Процесс установки описывать не буду, его легко можно найти в интернете, а вот список программ для создания загрузочной флешки перечислю: &amp;lt;a href=//unetbootin.github.io/ taget=_blank&amp;gt;unetbootin&amp;lt;/a&amp;gt;, &amp;lt;a href=//www.linuxliveusb.com/ taget=_blank&amp;gt;linuxliveusb&amp;lt;/a&amp;gt;, &amp;lt;a href=//www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/ taget=_blank&amp;gt;universal usb installer&amp;lt;/a&amp;gt; , &amp;lt;a href=//sourceforge.net/projects/win32diskimager/ taget=_blank&amp;gt;win32diskimager&amp;lt;/a&amp;gt;. Что же, мы установили дистрибутив и скорее всего сразу заметили, что локализация не полная, да и раскладка не переключается как надо. Исправим это открыв терминал и прописав удобную для нас раскладку&lt;/p&gt;

&lt;p&gt;Shift+Alt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gsettings set org.pantheon.desktop.gala.keybindings switch-input-source &quot;['&amp;lt;Alt&amp;gt;Shift_L', '&amp;lt;Alt&amp;gt;Shift_R', '&amp;lt;Shift&amp;gt;Alt_L', '&amp;lt;Shift&amp;gt;Alt_R']&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Shift+Ctrl:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gsettings set org.pantheon.desktop.gala.keybindings switch-input-source &quot;['&amp;lt;Ctrl&amp;gt;Shift_L', '&amp;lt;Ctrl&amp;gt;&amp;gt;Shift_R', '&amp;lt;Shift&amp;gt;Control_L', '&amp;lt;Shift&amp;gt;Control_R']&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Русcифицируем систему выполняя команды последовательно&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install language-pack-ru language-pack-gnome-rusudo update-locale LANG=ru_RU.UTF-8
sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Далее будет перезагрузка. Так у нас уже руссифицированная система и удобное переключение раскладки клавиатуры, добавим удобный Tweaks, в нем можно удобно подстроить интерфейс под себя, поменять тему и прочее.Устанавливаем командами&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:mpstark/elementary-tweaks-daily
sudo apt-get update
sudo apt-get install elementary-tweaks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Он появится в параметрах системы. И в принципе система готова к использованию. Весь софт подойдет от ubuntu.По этому можно легко найти и установить весь софт который вам потребуется для работы в Elementary.&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Sep 2015 02:59:00 +0300</pubDate>
        <link>http://localhost:4000/2015/eOS1/</link>
        <guid isPermaLink="true">http://localhost:4000/2015/eOS1/</guid>
        
        <category>Настройка</category>
        
        
        <category>OS</category>
        
      </item>
    
      <item>
        <title>Github начало работы в linux</title>
        <description>&lt;p&gt;Искал, значит искал как же в линуксе удобно заливать файлы на git. Там посмотрел не понятно, тут одни команды и 0 объяснений. Меня очень удивило то, что большая часть информации в русскоязычном сегменте находятся на пользовательских блогах. Вот пришло время и мне написать заметку про работу с github. Получилось так «Собрал все в кучу и постарался разложить все по полочкам».&lt;/p&gt;

&lt;p&gt;Начнем с того, что мы будем работать через SSH протокол. Если еще не установили его, то нужно это сделать командой (Ubuntu):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Теперь создадим пару ssh-ключей командой:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t rsa -C &quot;name@email.ru&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В данном примере команда ssh-keygen генерирует пару (открытый и закрытый) ключей rsa (-t rsa) с расширенным комментарием, включающим указанные данные (-C “name@email.ru”) , это было введено в OpenSSH 5.1 в качестве простого средства визуальной идентификации отпечатка ключа. Как только будет введена представленная выше команда, утилита ssh-keygen запросит имя файла и местоположение для создаваемых ssh-ключей. Можно ничего не вводить, а просто нажать Enter. В этом случае программа создаст и положит их по пути по умолчанию (который показан ею в скобочках). Следом появится Enter passphrase. Здесь passphrase – это пароль к создаваемым ssh-ключам.&lt;/p&gt;

&lt;p&gt;Теперь нам понадобится утилита управления ключами (она входит в состав пакета ssh). Выполняем команду eval:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ eval $(ssh-agent)
Agent pid 2157
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;После запуска ssh-agent нам нужно будет добавить закрытый ключ в его кэш:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-add ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Можно посмотреть, что утилита ssh-add “подхватила” и распознала предоставленные ею ssh-ключи:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-add -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В файле id_rsa.pub находится публичный ключ, который применяется на сервисе GitHub, добавляем его в настройках. Теперь командой ssh -T git@github.com подключаемся к github, вводим yes и нас приветствуют.&lt;/p&gt;

&lt;p&gt;Устанавливаем сам git командой:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Теперь, когда git установлен, необходимо сделать несколько вещей для того, чтобы сообщения в коммитах содержали корректную информацию. Проще всего сделать это с помощью команды git config. необходимо задать имя и адрес электронной почты, поскольку git добавляет эту информацию к каждому коммиту. Эти настройки можно задать при помощи следующих команд:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --global user.name &quot;Your Name&quot;
git config --global user.email &quot;youremail@domain.com&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Все заданные настройки конфигурации можно просмотреть при помощи команды:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Будем считать что репозиторий у нас уже есть. Назовем его (repname), теперь его надо склонировать на локальную машину, командой:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:username/repname.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Переходим в папку репозитория и после того как сделали изменения вводим&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -m 'Added changes'
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Команда git commit -m ‘Added changes’ фиксирует изменения в локальном репозитории. Команда git push отправляет внесенные и зафиксированные изменения в локальном репозитории на удаленный репозиторий. Следующие изменения буду применимы после команды:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Эта команда автоматически извлекает и затем сливает данные из удалённой ветки в нашу текущую ветку.&lt;/p&gt;

&lt;p&gt;Вот в принципе все. Постарался подробно описать каждую команду которую использовал.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Feb 2015 18:30:00 +0300</pubDate>
        <link>http://localhost:4000/2015/github1/</link>
        <guid isPermaLink="true">http://localhost:4000/2015/github1/</guid>
        
        <category>github</category>
        
        
        <category>internet</category>
        
      </item>
    
  </channel>
</rss>
